{"version":3,"file":"942.js","mappings":"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","sources":["webpack://@dev/app/../talks/src/services/Service.ts","webpack://@dev/app/../talks/src/services/BrowserService.ts","webpack://@dev/app/../talks/src/services/HelloService.ts","webpack://@dev/app/../talks/src/services/MessagesService.ts","webpack://@dev/app/../talks/src/services/SensorService.ts","webpack://@dev/app/../talks/src/services/VideoService.ts","webpack://@dev/app/../talks/src/services/RemoteService.ts","webpack://@dev/app/../talks/src/services/index.ts","webpack://@dev/app/../web/src/containers/Remote/index.tsx","webpack://@dev/app/../web/src/containers/Remote/styles.module.scss","webpack://@dev/app/../web/src/containers/Remote/styles.module.scss?24f0"],"sourcesContent":["import { GraphQLClient } from \"graphql-request\";\nimport { createClient } from \"graphql-ws\";\n\n// https://shammelburg.medium.com/subscriptions-with-graphql-dfa8279af050\n// https://github.com/shammelburg/graphql-rxjs-angular/blob/main/src/app/services/graphql.service.ts\nconst client = new GraphQLClient(`${location.pathname}graphql`, {\n  headers: {\n    // authorization: `Bearer ${localStorage.getItem('token')}`,\n  },\n});\n\nconst subscriptions = createClient({\n  url: `${{ \"https:\": \"wss:\" }[location.protocol] || \"ws:\"}//${location.host}${\n    location.pathname\n  }subscriptions`,\n});\n\nexport class Service {\n  client = client;\n  subscriptions = subscriptions;\n}\n","import { gql } from \"graphql-request\";\nimport { from } from \"rxjs\";\nimport { Service } from \"./Service\";\n\nconst FILES = gql`\n  query {\n    files {\n      name\n    }\n  }\n`;\n\nexport class BrowserService extends Service {\n  files() {\n    return from(this.client.request(FILES));\n  }\n}\n","import { gql } from \"graphql-request\";\nimport { from } from \"rxjs\";\nimport { Service } from \"./Service\";\n\nconst HELLO = gql`\n  query {\n    hello\n  }\n`;\n\nexport class HelloService extends Service {\n  hello() {\n    return from(this.client.request(HELLO));\n  }\n}\n","import { gql } from \"graphql-request\";\nimport { from, Observable } from \"rxjs\";\nimport { Service } from \"./Service\";\n\nconst MESSAGES = gql`\n  query MessagesQuery {\n    messages {\n      uuid\n      text\n    }\n  }\n`;\n\nconst ON_MESSAGE = gql`\n  subscription MessageSubscription {\n    message {\n      uuid\n      text\n    }\n  }\n`;\n\nconst SEND_MESSAGE = gql`\n  mutation SendMessageMutation($message: MessageInput) {\n    sendMessage(message: $message)\n  }\n`;\n\n// https://github.com/shammelburg/graphql-rxjs-angular/blob/main/src/app/services/graphql.service.ts\n// https://codesandbox.io/s/push-based-react-lab-3-vc8d6?file=/src/users/state/users.service.ts\n// https://jasonwatmore.com/post/2020/04/21/react-hooks-rxjs-communicating-between-components-with-observable-subject\nexport class MessagesService extends Service {\n  getMessages() {\n    return from(this.client.request(MESSAGES));\n  }\n  sendMessage(message) {\n    return from(this.client.request(SEND_MESSAGE, { message }));\n  }\n  onMessage() {\n    return new Observable((observer) =>\n      this.subscriptions.subscribe(\n        { query: ON_MESSAGE },\n        {\n          next: ({ data, errors }) =>\n            errors ? observer.error(errors[0]) : observer.next(data),\n          error: (error) => observer.error(error),\n          complete: () => observer.complete(),\n        }\n      )\n    );\n  }\n}\n","import { gql } from \"graphql-request\";\nimport { Observable } from \"rxjs\";\nimport { Service } from \"./Service\";\n\nconst ON_SENSOR = gql`\n  subscription SensorSubscription {\n    sensor {\n      data\n    }\n  }\n`;\n\nexport class SensorService extends Service {\n  onSensor() {\n    return new Observable((observer) =>\n      this.subscriptions.subscribe(\n        { query: ON_SENSOR },\n        {\n          next: ({ data, errors }) =>\n            errors ? observer.error(errors[0]) : observer.next(data),\n          error: (error) => observer.error(error),\n          complete: () => observer.complete(),\n        }\n      )\n    );\n  }\n}\n","import { gql } from \"graphql-request\";\nimport { from, Observable } from \"rxjs\";\nimport { Service } from \"./Service\";\n\nconst ON_SIGNAL = gql`\n  subscription SignalSubscription {\n    signal {\n      sdp\n      type\n      candidate {\n        candidate\n        sdpMLineIndex\n        sdpMid\n      }\n    }\n  }\n`;\n\nconst SEND_SIGNAL = gql`\n  mutation SendSignalMutation($signal: SignalInput) {\n    sendSignal(signal: $signal)\n  }\n`;\n\nexport class VideoService extends Service {\n  sendSignal(signal) {\n    return from(this.client.request(SEND_SIGNAL, { signal }));\n  }\n  onSignal() {\n    return new Observable((observer) =>\n      this.subscriptions.subscribe(\n        { query: ON_SIGNAL },\n        {\n          next: ({ data, errors }) =>\n            errors ? observer.error(errors[0]) : observer.next(data),\n          error: (error) => observer.error(error),\n          complete: () => observer.complete(),\n        }\n      )\n    );\n  }\n}\n","import { gql } from \"graphql-request\";\nimport { from, Observable } from \"rxjs\";\nimport { Service } from \"./Service\";\n\nconst REMOTE = gql`\n  query RemoteQuery {\n    remote {\n      data\n    }\n  }\n`;\n\nconst REMOTE_TV = gql`\n  query RemoteTvQuery($action: String) {\n    remoteTv(action: $action) {\n      data\n    }\n  }\n`;\n\nconst ON_REMOTE = gql`\n  subscription RemoteSubscription {\n    remote {\n      data\n    }\n  }\n`;\n\nconst SEND_REMOTE = gql`\n  mutation SendRemoteMutation($remote: RemoteInput) {\n    sendRemote(remote: $remote)\n  }\n`;\n\nexport class RemoteService extends Service {\n  getMessages() {\n    return from(this.client.request(REMOTE));\n  }\n  getRemoteTv(action) {\n    return from(this.client.request(REMOTE_TV, { action }));\n  }\n  sendMessage(data) {\n    return from(this.client.request(SEND_REMOTE, { data }));\n  }\n  onMessage() {\n    return new Observable((observer) =>\n      this.subscriptions.subscribe(\n        { query: ON_REMOTE },\n        {\n          next: ({ data, errors }) =>\n            errors ? observer.error(errors[0]) : observer.next(data.remote),\n          error: (error) => observer.error(error),\n          complete: () => observer.complete(),\n        }\n      )\n    );\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport { BrowserService } from \"./BrowserService\";\nimport { HelloService } from \"./HelloService\";\nimport { MessagesService } from \"./MessagesService\";\nimport { SensorService } from \"./SensorService\";\nimport { VideoService } from \"./VideoService\";\n\nexport * from \"./RemoteService\";\n\nconst helloService = new HelloService();\n\nexport function useHello() {\n  const [state, setState] = useState({ hello: null });\n\n  useEffect(() => {\n    const subscriptions = [\n      helloService\n        .hello()\n        .subscribe(({ hello }) => setState((state) => ({ ...state, hello }))),\n    ];\n    return () => {\n      subscriptions.map((it) => it.unsubscribe());\n    };\n  }, []);\n\n  return [state];\n}\n\nconst messageService = new MessagesService();\n\n// https://codesandbox.io/s/push-based-react-lab-3-vc8d6?file=/src/users/hooks/users.hook.ts\nexport function useMessages() {\n  const [{ messages }, setState] = useState(() => ({\n    messages: null,\n  }));\n\n  useEffect(() => {\n    const subscriptions = [\n      messageService\n        .getMessages()\n        .subscribe(({ messages }) =>\n          setState((state) => ({ ...state, messages }))\n        ),\n      messageService.onMessage().subscribe(({ message }) =>\n        setState(({ messages, ...state }) => ({\n          ...state,\n          messages: messages.concat([message]),\n        }))\n      ),\n    ];\n    return () => {\n      subscriptions.map((it) => it.unsubscribe());\n    };\n  }, []);\n\n  return [\n    { messages },\n    { sendMessage: (message) => messageService.sendMessage(message) },\n  ];\n}\n\nconst sensorService = new SensorService();\n\nexport function useSensor() {\n  const [{ values }, setState] = useState(() => ({\n    values: null,\n  }));\n\n  useEffect(() => {\n    const subscriptions = [\n      sensorService.onSensor().subscribe(({ sensor }) =>\n        setState(({ values, ...state }) => ({\n          ...state,\n          values: (values || []).concat([sensor]),\n        }))\n      ),\n    ];\n    return () => {\n      subscriptions.map((it) => it.unsubscribe());\n    };\n  }, []);\n\n  return [{ values }, {}];\n}\n\nconst videoService = new VideoService();\n\nexport function useVideo() {\n  const [state, setState] = useState({ hello: null });\n\n  useEffect(() => {\n    const subscriptions = [\n      videoService\n        .onSignal()\n        .subscribe(({ signal }) => setState((state) => ({ ...state, signal }))),\n    ];\n    return () => {\n      subscriptions.map((it) => it.unsubscribe());\n    };\n  }, []);\n\n  return [state, { sendSignal: (signal) => videoService.sendSignal(signal) }];\n}\n\nconst browserService = new BrowserService();\n\nexport function useFiles() {\n  const [state, setState] = useState({ files: null });\n\n  useEffect(() => {\n    const subscriptions = [\n      browserService\n        .files()\n        .subscribe(({ files }) => setState((state) => ({ ...state, files }))),\n    ];\n    return () => {\n      subscriptions.map((it) => it.unsubscribe());\n    };\n  }, []);\n\n  return [state];\n}\n","import React, {\n  MouseEventHandler,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { RemoteService } from \"@dev/talks/src/services\";\nimport styles from \"./styles.module.scss\";\n\nconst base = \"http://192.168.2.101:8080\";\n\nconst keys = {\n  VOD: 361,\n  POWER: 116,\n  N: 174,\n  EPG: 365,\n  HOME: 102,\n\n  INFO: 358,\n  APP: 367,\n  OPT: 357,\n\n  VOL_P: 115,\n  VOL_M: 114,\n\n  UP: 103,\n  LEFT: 105,\n  OK: 352,\n  RIGHT: 106,\n  DOWN: 108,\n\n  PR_P: 402,\n  PR_M: 403,\n\n  BACK: 158,\n\n  STOP: 128,\n  REV: 168,\n  PAUSE: 119,\n  PLAY: 207,\n  FF: 159,\n  REC: 167,\n\n  MUTE: 113,\n  PORTAL: 102,\n  TEXT: 388,\n  LIST: 395,\n\n  RADIO: 385,\n\n  RED: 398,\n  GREEN: 399,\n  YELLOW: 400,\n  BLUE: 401,\n\n  \"1\": 2,\n  \"2\": 3,\n  \"3\": 4,\n  \"4\": 5,\n  \"5\": 6,\n  \"6\": 7,\n  \"7\": 8,\n  \"8\": 9,\n  \"9\": 10,\n  \"0\": 11,\n\n  SETUP: 367,\n  STAR: 1,\n};\n\nfunction delay(timeout = 100) {\n  return new Promise((resolve) => setTimeout(resolve, timeout));\n}\n\nconst remoteService = new RemoteService();\n\nfunction useRemote() {\n  const [{ data }, setState] = useState(() => ({\n    data: null,\n  }));\n\n  useEffect(() => {\n    const subscriptions = [\n      remoteService.onMessage().subscribe(({ data }) => setState({ data })),\n    ];\n    return () => {\n      subscriptions.map((it) => it.unsubscribe());\n    };\n  }, []);\n\n  return [\n    { data },\n    {\n      remoteTv: (action) => remoteService.getRemoteTv(action),\n      status: () => remoteService.getMessages(),\n      sendMessage: (message) => remoteService.sendMessage(message),\n    },\n  ];\n}\n\n// https://github.com/HubertReX/Flask-Home-Automation/blob/master/send_key2ncplus.py\n// http://192.168.2.101:8080/upnpdev/pres/uuid_1651c520-1dd2-11b2-a7dd-c477af3c9c7f/00\n\nasync function event(ev: string, code: number) {\n  return await exec(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <s:Envelope s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">\n     <s:Body>\n        <u:ProcessInputEvent xmlns:u=\"urn:adbglobal.com:service:X_ADB_RemoteControl:1\">\n           <InputEvent>ev=${ev},code=${code}</InputEvent>\n        </u:ProcessInputEvent>\n     </s:Body>\n  </s:Envelope>`)\n    .then((res) => res.text())\n    .then((data) => console.log(data));\n}\n\n// https://raw.githubusercontent.com/rafikel/Fibaro/master/ncplus/ncplus.lua\n\nasync function exec(\n  body: string,\n  action = \"urn:adbglobal.com:service:X_ADB_RemoteControl:1#ProcessInputEvent\"\n) {\n  const ctrl = \"/upnpfun/ctrl/uuid_1651c520-1dd2-11b2-a7dd-c477af3c9c7f/04\";\n  // const ctrl = '/upnpfun/ctrl/uuid_1651c520-1dd2-11b2-a7dd-c477af3c9c7f/01'\n  const url = `${base}${ctrl}`;\n\n  console.log(body);\n\n  return await fetch(url, {\n    method: \"POST\",\n    body,\n    headers: {\n      SOAPACTION: `\"${action}\"`,\n      // \"SOAPACTION\": '',\n      // \"SOAPACTION\": '\"urn:adbglobal.com:service:X_ADB_RemoteControl:1\"',\n      // \"SOAPACTION\": 'urn:adbglobal.com:service:X_ADB_RemoteControl:1#ProcessInputEvent',\n      // \"CONTENT-TYPE\": 'text/xml; charset=\"utf-8\"',\n      // \"HOST\": \"192.168.2.101:8080\",\n      // 'Content-type': 'application/xml',\n      // 'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  });\n}\n\nasync function test() {\n  // upnpReqest(tcpDEVICE, virtualIP, virtualPort,\n  //   \"/upnpfun/ctrl/\" .. boxId .. \"/04\",\n  //   \"adbglobal.com\",\n  //   \"X_ADB_RemoteControl:1\",\n  //   \"ProcessInputEvent\",\n  //   \"<InputEvent>ev=keydn,code=\" .. key .. \"</InputEvent>\"\n  // );\n\n  // await exec(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  // <s:Envelope s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  //    <s:Body>\n  //       <u:ProcessInputEvent xmlns:u=\"urn:adbglobal.com:service:X_ADB_RemoteControl:1\">\n  //          <InputEvent>ev=${status},code=${keys.POWER}</InputEvent>\n  //       </u:ProcessInputEvent>\n  //    </s:Body>\n  // </s:Envelope>`).then(res => res.text())\n  // .then(data => console.log(data))\n\n  // response = upnpReqest(tcpDEVICE, virtualIP, virtualPort,\n  //   \"/upnpfun/ctrl/\" .. boxId .. \"/01\",\n  //   \"schemas-upnp-org\",\n  //   \"ContentDirectory:2\",\n  //   \"GetSystemUpdateID\",\n  //   \"\"\n  // );\n\n  // await exec(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  // <s:Envelope s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  //    <s:Body>\n  //       <u:GetSystemUpdateID xmlns:u=\"urn:schemas-upnp-org:service:ContentDirectory:2\">\n  //       </u:GetSystemUpdateID>\n  //    </s:Body>\n  // </s:Envelope>`,\"urn:schemas-upnp-org:service:ContentDirectory:2#GetSystemUpdateID\").then(res => res.text())\n  // .then(data => console.log(data))\n\n  const code = keys.POWER;\n\n  await event(\"keydown\", code);\n  await delay(1000);\n  await event(\"keyup\", code);\n\n  // await exec(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  //   <s:Envelope s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  //      <s:Body>\n  //         <u:ProcessInputEvent xmlns:u=\"urn:adbglobal.com:service:X_ADB_RemoteControl:1\">\n  //            <InputEvent>ev=${status},code=${key}</InputEvent>\n  //         </u:ProcessInputEvent>\n  //      </s:Body>\n  //   </s:Envelope>`).then(res => res.text())\n  // .then(data => console.log(data))\n}\n\n// test()\n\nasync function adb(key = \"KeyStandBy\") {\n  await fetch(`${base}/control/rcu`, {\n    method: \"POST\",\n    mode: \"no-cors\",\n    body: `Keypress=${key}`,\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n  })\n    .then((res) => res.text())\n    .then(console.log);\n}\n\nasync function vcr(action) {\n  const base = \"http://192.168.0.103\";\n\n  fetch(`${base}/YamahaExtendedControl/v1/${action}`, {\n    method: \"GET\",\n    mode: \"no-cors\",\n  })\n    .then((res) => res.text())\n    .then(console.log);\n}\n\n// https://github.com/g30r93g/viera.js/blob/master/viera.js\n// https://github.com/AntonioMeireles/homebridge-vieramatic/blob/master/src/viera.ts\nasync function tv(action = \"SetVolume\") {\n  const volume = 21;\n  const base = \"http://192.168.2.90:55000\";\n  const urn = \"schemas-upnp-org:service:RenderingControl:1\";\n  const command = `<InstanceID>0</InstanceID><Channel>Master</Channel>${\n    {\n      SetVolume: \"<DesiredVolume>20</DesiredVolume>\",\n    }[action]\n  }`;\n  const body = `<?xml version=\"1.0\" encoding=\"utf-8\"?> \n  <s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"> \n  <s:Body> \n   <u:${action} xmlns:u=\"urn:${urn}\"> \n    ${command}\n   </u:${action}> \n  </s:Body> \n  </s:Envelope>`;\n  fetch(`${base}/dmr/control_0`, {\n    method: \"POST\",\n    // mode: \"no-cors\",\n    body,\n    headers: {\n      \"Content-Length\": String(body.length),\n      \"Content-Type\": 'text/xml; charset=\"utf-8\"',\n      SOAPACTION: `\"urn:${urn}#${action}\"`,\n    },\n  })\n    .then((res) => res.text())\n    .then(console.log);\n}\n\nasync function test3() {\n  const UPnPClient = null; //require('node-upnp');\n\n  const client = new UPnPClient({\n    url: `${base}/upnpdev/devc/uuid_1651c520-1dd2-11b2-a7dd-c477af3c9c7f/00`,\n  });\n\n  let desc = await client.getDeviceDescription();\n  console.log(\"Device\", desc);\n\n  desc = await client.getServiceDescription(\n    \"urn:upnp-org:serviceId:X_ADB_RemoteControl\"\n  );\n  console.log(\"Service:X_ADB_RemoteControl\", desc);\n  console.log(desc.stateVariables.Enabled);\n\n  // await client.subscribe('urn:upnp-org:serviceId:X_ADB_RemoteControl', (e:any) => console.log(e));\n\n  await delay(1000);\n\n  // await client.on('Enabled', (e:any) => console.log(e));\n  // await client.on('Capabilities', (e:any) => console.log(e));\n  // await client.on('ResponseMessage', (e:any) => console.log(e));\n  // await client.on('LastChange', (e:any) => console.log(e));\n\n  // desc = await client.call('urn:upnp-org:serviceId:X_ADB_RemoteControl', 'ProcessInputEvent', {\n  //   InputEvent: `ev=keydn,code=4`,\n  // });\n  // console.log('Call:X_ADB_RemoteControl.ProcessInputEvent', desc);\n\n  await delay(100);\n\n  // desc = await client.call('urn:upnp-org:serviceId:X_ADB_RemoteControl', 'ProcessInputEvent', {\n  //   InputEvent: `ev=keyup,code=4`,\n  // });\n  // console.log('Call:X_ADB_RemoteControl.ProcessInputEvent', desc);\n\n  desc = await client.call(\n    \"urn:upnp-org:serviceId:X_ADB_RemoteControl\",\n    \"PostMessage\",\n    {\n      Message: `ev=keyup,code=4`,\n    }\n  );\n  console.log(\"Call:X_ADB_RemoteControl.PostMessage\", desc);\n\n  // await delay(1000)\n\n  // // await client.subscribe('urn:upnp-org:serviceId:ScheduledRecording', (e:any) => console.log(e));\n\n  // await delay(1000)\n\n  //   // desc = await client.call('urn:upnp-org:serviceId:X_ADB_RemoteControl', 'ProcessInputEvent', {\n  //   //   InputEvent: `ev=keyup,code=${keys.POWER}`,\n  //   // });\n  //   // console.log('Call:X_ADB_RemoteControl.ProcessInputEvent', desc);\n\n  //   // desc = await client.getServiceDescription('urn:upnp-org:serviceId:ConnectionManager');\n  //   // console.log('Service:ConnectionManager', desc);\n\n  //   // desc = await client.call('urn:upnp-org:serviceId:ConnectionManager', 'GetProtocolInfo');\n  //   // console.log('Call:ConnectionManager.GetProtocolInfo', desc);\n\n  //   // desc = await client.call('urn:upnp-org:serviceId:ConnectionManager', 'GetCurrentConnectionIDs');\n  //   // console.log('Call:ConnectionManager.GetCurrentConnectionIDs', desc);\n\n  //   // desc = await client.getServiceDescription('urn:upnp-org:serviceId:ContentDirectory');\n  //   // console.log('Service:ContentDirectory', desc);\n\n  //   // desc = await client.call('urn:upnp-org:serviceId:ContentDirectory', 'GetSearchCapabilities');\n  //   // console.log('Call:ContentDirectory.GetSearchCapabilities', desc);\n\n  //   // desc = await client.call('urn:upnp-org:serviceId:ContentDirectory', 'GetFeatureList');\n  //   // console.log('Call:ContentDirectory.GetFeatureList', desc);\n\n  //   desc = await client.getServiceDescription('urn:upnp-org:serviceId:ScheduledRecording');\n  //   console.log('Service:ScheduledRecording', desc);\n\n  //   desc = await client.call('urn:upnp-org:serviceId:ScheduledRecording', 'GetSortCapabilities');\n  //   console.log('Call:ScheduledRecording.GetSortCapabilities', desc);\n\n  //   // desc = await client.getVariableServiceId('SourceProtocolInfo');\n  //   // console.log('Variable:SourceProtocolInfo', desc);\n\n  //   // desc = await client.getVariableServiceId('Volume', true);\n  //   // console.log('Variable:Volume', desc);\n\n  //   console.log('hasSubscriptions', client.hasSubscriptions());\n}\n\nexport const schema = () => {\n  console.log([\"schema\"]);\n};\n\nexport default function Sensor() {\n  const [{ data }, { remoteTv, status }] = useRemote();\n  console.log({ data });\n\n  useEffect(() => {\n    // https://stackoverflow.com/questions/54896998/how-to-process-fetch-response-from-an-opaque-type\n    // fetch(`${base}/system/version`, {\n    //     // method: 'POST',\n    //     method: 'GET',\n    //     // mode: 'no-cors',\n    //     headers: {\n    //       \"Accept\": \"text/html\",\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //   })\n    //   .then(res => console.log(res))\n    // .then(res => res.text())\n    // .then(data => console.log(data))\n  }, []);\n\n  const onVersion = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => status(),\n    []\n  );\n\n  const onStandBy = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => adb(\"KeyStandBy\"),\n    []\n  );\n\n  const onVolumeDown = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => adb(\"KeyVolumeDown\"),\n    []\n  );\n\n  const onVolumeUp = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => adb(\"KeyVolumeUp\"),\n    []\n  );\n\n  const onGetDeviceInfo = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => vcr(\"system/getDeviceInfo\"),\n    []\n  );\n\n  const onGetFeatures = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => vcr(\"system/getFeatures\"),\n    []\n  );\n\n  const onGetStatus = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => vcr(\"main/getStatus\"),\n    []\n  );\n\n  const onSetVolume70 = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => vcr(\"main/setVolume?volume=70\"),\n    []\n  );\n\n  const onSetVolume90 = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => vcr(\"main/setVolume?volume=90\"),\n    []\n  );\n\n  const onGetVolume = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"GetVolume\"),\n    []\n  );\n\n  const onSetVolumeTv = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    // (event) => tv(\"SetVolume\"),\n    (event) => remoteTv(\"SetVolume\"),\n    []\n  );\n\n  const onGetMuteTv = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"GetMute\"),\n    []\n  );\n\n  const onListPresetsTv = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"ListPresets\"),\n    []\n  );\n\n  const onSetMuteTv = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"SetMute\"),\n    []\n  );\n\n  const onSendKeyTv = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"X_SendKey\"),\n    []\n  );\n\n  const onAppTypeTv = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"X_LaunchApp\"),\n    []\n  );\n\n  const onPinCodeTv = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"X_DisplayPinCode\"),\n    []\n  );\n\n  const onRequestAuthTv = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"X_RequestAuth\"),\n    []\n  );\n\n  const onGetAudioList = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"X_GetAudioList\"),\n    []\n  );\n\n  const onGetCurrentAudioID = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"X_GetCurrentAudioID\"),\n    []\n  );\n\n  const onGetCurrentConnectionIDs = useCallback<\n    MouseEventHandler<HTMLButtonElement>\n  >((event) => remoteTv(\"GetCurrentConnectionIDs\"), []);\n\n  const onGetMediaInfo = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"GetMediaInfo\"),\n    []\n  );\n\n  const onGetProtocolInfo = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(\"GetProtocolInfo\"),\n    []\n  );\n\n  return (\n    <section className={styles.Section}>\n      <button onClick={onVersion}>Version</button>\n      <button onClick={onStandBy}>StandBy</button>\n      <button onClick={onVolumeDown}>Volume -</button>\n      <button onClick={onVolumeUp}>Volume +</button>\n      <button onClick={onGetDeviceInfo}>GetDeviceInfo</button>\n      <button onClick={onGetFeatures}>GetFeatures</button>\n      <button onClick={onGetStatus}>GetStatus</button>\n      <button onClick={onSetVolume70}>SetVolume 70%</button>\n      <button onClick={onSetVolume90}>SetVolume 90%</button>\n      <button onClick={onGetVolume}>GetVolume</button>\n      <button onClick={onSetVolumeTv}>SetVolumeTv</button>\n      <button onClick={onGetMuteTv}>GetMuteTv</button>\n      <button onClick={onSetMuteTv}>SetMuteTv</button>\n      <button onClick={onListPresetsTv}>ListPresetsTv</button>\n      <button onClick={onSendKeyTv}>SendKeyTv</button>\n      <button onClick={onAppTypeTv}>AppTypeTv</button>\n      <button onClick={onPinCodeTv}>PinCodeTv</button>\n      <button onClick={onRequestAuthTv}>RequestAuthTv</button>\n      <button onClick={onGetAudioList}>GetAudioList</button>\n      <button onClick={onGetCurrentAudioID}>GetCurrentAudioID</button>\n      <button onClick={onGetCurrentConnectionIDs}>\n        GetCurrentConnectionIDs\n      </button>\n      <button onClick={onGetMediaInfo}>GetMediaInfo</button>\n      <button onClick={onGetProtocolInfo}>GetProtocolInfo</button>\n      {data === null ? (\n        <div>Loading...</div>\n      ) : (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      )}\n    </section>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".DeTwnNnGKuydH91RohQA{color:purple}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../web/src/containers/Remote/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,YAAA\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": \"DeTwnNnGKuydH91RohQA\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.module.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["client","GraphQLClient","location","pathname","headers","subscriptions","createClient","url","protocol","host","Service","FILES","gql","HELLO","MESSAGES","ON_MESSAGE","SEND_MESSAGE","ON_SENSOR","ON_SIGNAL","SEND_SIGNAL","REMOTE","REMOTE_TV","ON_REMOTE","SEND_REMOTE","RemoteService","getMessages","from","this","request","getRemoteTv","action","sendMessage","data","onMessage","Observable","observer","subscribe","query","next","errors","error","remote","complete","helloService","hello","useHello","state","setState","useState","useEffect","map","it","unsubscribe","messageService","message","useMessages","messages","concat","sensorService","onSensor","useSensor","values","sensor","videoService","sendSignal","signal","onSignal","useVideo","browserService","files","useFiles","remoteService","async","adb","key","fetch","method","mode","body","then","res","text","console","log","vcr","schema","Sensor","remoteTv","status","useRemote","onVersion","useCallback","event","onStandBy","onVolumeDown","onVolumeUp","onGetDeviceInfo","onGetFeatures","onGetStatus","onSetVolume70","onSetVolume90","onGetVolume","onSetVolumeTv","onGetMuteTv","onListPresetsTv","onSetMuteTv","onSendKeyTv","onAppTypeTv","onPinCodeTv","onRequestAuthTv","onGetAudioList","onGetCurrentAudioID","onGetCurrentConnectionIDs","onGetMediaInfo","onGetProtocolInfo","className","styles","onClick","JSON","stringify","___CSS_LOADER_EXPORT___","push","module","id","locals","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","update","hot","invalidate","isNamedExport","oldLocals","accept","a","b","p","isEqualLocals","dispose","undefined"],"sourceRoot":""}