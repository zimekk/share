{"version":3,"file":"145.js","mappings":"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","sources":["webpack://@dev/app/../client/src/index.ts","webpack://@dev/app/../remote/src/services/RemoteService.ts","webpack://@dev/app/../remote/src/containers/Remote/Discover.tsx","webpack://@dev/app/../remote/src/containers/Remote/RemoteAdb.tsx","webpack://@dev/app/../remote/src/containers/Remote/RemoteTv.tsx","webpack://@dev/app/../remote/src/containers/Remote/RemoteVcr.tsx","webpack://@dev/app/../remote/src/containers/Remote/index.tsx","webpack://@dev/app/../remote/src/containers/Remote/styles.module.scss","webpack://@dev/app/../../node_modules/rxjs/dist/esm5/internal/operators/map.js","webpack://@dev/app/../remote/src/containers/Remote/styles.module.scss?be37"],"sourcesContent":["import { GraphQLClient } from \"graphql-request\";\nimport { createClient } from \"graphql-ws\";\n\n// https://shammelburg.medium.com/subscriptions-with-graphql-dfa8279af050\n// https://github.com/shammelburg/graphql-rxjs-angular/blob/main/src/app/services/graphql.service.ts\nexport const client = new GraphQLClient(`${location.pathname}graphql`, {\n  headers: {\n    // authorization: `Bearer ${localStorage.getItem('token')}`,\n  },\n});\n\nexport const subscriptions = createClient({\n  url: `${{ \"https:\": \"wss:\" }[location.protocol] || \"ws:\"}//${location.host}${\n    location.pathname\n  }subscriptions`,\n});\n","import { gql } from \"graphql-request\";\nimport { from, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { client, subscriptions } from \"@dev/client\";\n\nexport class Service {\n  client = client;\n  subscriptions = subscriptions;\n}\n\nconst GET_DEVICES = gql`\n  query GetDevicesQuery {\n    devices {\n      data\n    }\n  }\n`;\n\nconst GET_VERSION = gql`\n  query GetVersionQuery($location: String) {\n    version(location: $location)\n  }\n`;\n\nconst REMOTE_RCU = gql`\n  query RemoteRcuQuery($location: String, $key: String) {\n    remoteRcu(location: $location, key: $key) {\n      data\n    }\n  }\n`;\n\nconst REMOTE_TV = gql`\n  query RemoteTvQuery($location: String, $action: String) {\n    remoteTv(location: $location, action: $action) {\n      data\n    }\n  }\n`;\n\nconst REMOTE_VCR = gql`\n  query RemoteVcrQuery($location: String, $action: String) {\n    remoteVcr(location: $location, action: $action) {\n      data\n    }\n  }\n`;\n\nconst ON_REMOTE = gql`\n  subscription RemoteSubscription {\n    remote {\n      data\n    }\n  }\n`;\n\nconst SEND_REMOTE = gql`\n  mutation SendRemoteMutation($remote: RemoteInput) {\n    sendRemote(remote: $remote)\n  }\n`;\n\ntype RcuKey = \"KeyStandBy\" | \"KeyVolumeDown\" | \"KeyVolumeUp\";\n\nexport class RemoteService extends Service {\n  getDevices() {\n    return from(this.client.request(GET_DEVICES)).pipe(\n      map(({ devices }) => devices)\n    );\n  }\n  getStatusAdb(location: string) {\n    return from(this.client.request(GET_VERSION, { location })).pipe(\n      map(({ version }) => version)\n    );\n  }\n  getRemoteRcu(location: string, key: RcuKey) {\n    return from(this.client.request(REMOTE_RCU, { location, key }));\n  }\n  getRemoteTv(location: string, action: string) {\n    return from(this.client.request(REMOTE_TV, { location, action }));\n  }\n  getRemoteVcr(location: string, action: string) {\n    return from(this.client.request(REMOTE_VCR, { location, action }));\n  }\n  sendMessage(data) {\n    return from(this.client.request(SEND_REMOTE, { data }));\n  }\n  onMessage() {\n    return new Observable((observer) =>\n      this.subscriptions.subscribe(\n        { query: ON_REMOTE },\n        {\n          next: ({ data, errors }) =>\n            errors ? observer.error(errors[0]) : observer.next(data.remote),\n          error: (error) => observer.error(error),\n          complete: () => observer.complete(),\n        }\n      )\n    );\n  }\n}\n","import React, { MouseEventHandler, useCallback } from \"react\";\n\nexport function Discover({ discover }) {\n  return (\n    <div>\n      <h3>UPNP</h3>\n      <button\n        onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n          (event) => discover(),\n          []\n        )}\n      >\n        Discover\n      </button>\n    </div>\n  );\n}\n","import React, { MouseEventHandler, useCallback, useState } from \"react\";\n\nasync function adb(location = \"http://192.168.2.101:8080\", key = \"KeyStandBy\") {\n  return await fetch(`${new URL(location).origin}/control/rcu`, {\n    method: \"POST\",\n    mode: \"no-cors\",\n    body: `Keypress=${key}`,\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n  })\n    .then((res) => res.text())\n    .then(console.log);\n}\n\nexport function RemoteAdb({ deviceAdb = [], remoteRcu, status }) {\n  const [version, setVersion] = useState(() => ({}));\n  const [LOCATION] = deviceAdb;\n\n  const onVersion = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => status(LOCATION).subscribe(setVersion),\n    [LOCATION]\n  );\n\n  const onStandBy = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => adb(LOCATION, \"KeyStandBy\"),\n    [LOCATION]\n  );\n\n  const onVolumeDown = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => adb(LOCATION, \"KeyVolumeDown\"),\n    [LOCATION]\n  );\n\n  const onVolumeUp = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteRcu(LOCATION, \"KeyVolumeUp\"),\n    [LOCATION]\n  );\n\n  return (\n    <div>\n      <h3>ADB</h3>\n      <pre>{JSON.stringify(deviceAdb, null, 2)}</pre>\n      <fieldset>\n        <legend>Information</legend>\n        <button onClick={onVersion}>Version</button>\n        <pre>{JSON.stringify(version, null, 2)}</pre>\n      </fieldset>\n      <fieldset>\n        <legend>Power</legend>\n        <button onClick={onStandBy}>StandBy</button>\n      </fieldset>\n      <fieldset>\n        <legend>Volume</legend>\n        <button onClick={onVolumeDown}>Volume -</button>\n        <button onClick={onVolumeUp}>Volume +</button>\n      </fieldset>\n      <fieldset>\n        <legend>Playback</legend>\n        <button\n          onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n            (event) => adb(LOCATION, \"KeyPause\"),\n            [LOCATION]\n          )}\n        >\n          Pause\n        </button>\n        <button onClick={onVolumeUp}>Volume +</button>\n      </fieldset>\n    </div>\n  );\n}\n","import React, { MouseEventHandler, useCallback } from \"react\";\nimport styles from \"./styles.module.scss\";\n\nimport type { IconType } from \"@dev/device\";\n\nexport function Icon({\n  url,\n  width,\n  height,\n  title,\n}: IconType & { title: string }) {\n  return (\n    <img\n      className={styles.Icon}\n      src={url}\n      width={width}\n      height={height}\n      title={title}\n    />\n  );\n}\n\nexport function RemoteTv({ deviceTv = [], remoteTv }) {\n  const [LOCATION, device] = deviceTv;\n\n  const onGetVolume = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"GetVolume\"),\n    [LOCATION]\n  );\n\n  const onSetVolume = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"SetVolume\"),\n    [LOCATION]\n  );\n\n  const onGetMute = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"GetMute\"),\n    [LOCATION]\n  );\n\n  const onListPresets = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"ListPresets\"),\n    [LOCATION]\n  );\n\n  const onSetMute = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"SetMute\"),\n    [LOCATION]\n  );\n\n  const onSendKey = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"X_SendKey\"),\n    [LOCATION]\n  );\n\n  const onAppType = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"X_LaunchApp\"),\n    [LOCATION]\n  );\n\n  const onPinCode = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"X_DisplayPinCode\"),\n    [LOCATION]\n  );\n\n  const onRequestAuth = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"X_RequestAuth\"),\n    [LOCATION]\n  );\n\n  const onGetAudioList = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"X_GetAudioList\"),\n    [LOCATION]\n  );\n\n  const onGetCurrentAudioID = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"X_GetCurrentAudioID\"),\n    [LOCATION]\n  );\n\n  const onGetCurrentConnectionIDs = useCallback<\n    MouseEventHandler<HTMLButtonElement>\n  >((event) => remoteTv(LOCATION, \"GetCurrentConnectionIDs\"), [LOCATION]);\n\n  const onGetMediaInfo = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"GetMediaInfo\"),\n    [LOCATION]\n  );\n\n  const onGetProtocolInfo = useCallback<MouseEventHandler<HTMLButtonElement>>(\n    (event) => remoteTv(LOCATION, \"GetProtocolInfo\"),\n    [LOCATION]\n  );\n\n  return (\n    <div>\n      {device && device.icons.length && (\n        <Icon\n          {...device.icons[0]}\n          title={`${device.modelName} / ${device.modelNumber}`}\n        />\n      )}\n      <h3>TV</h3>\n      <pre>{JSON.stringify(deviceTv, null, 2)}</pre>\n      <fieldset>\n        <legend>Volume</legend>\n        <button onClick={onGetVolume}>GetVolume</button>\n        <button onClick={onSetVolume}>SetVolume</button>\n        <button onClick={onGetMute}>GetMute</button>\n        <button onClick={onSetMute}>SetMute</button>\n      </fieldset>\n      <fieldset>\n        <legend>Information</legend>\n        <button onClick={onListPresets}>ListPresets</button>\n        <button onClick={onSendKey}>SendKey</button>\n        <button onClick={onAppType}>AppType</button>\n        <button onClick={onPinCode}>PinCode</button>\n        <button onClick={onRequestAuth}>RequestAuth</button>\n        <button onClick={onGetAudioList}>GetAudioList</button>\n        <button onClick={onGetCurrentAudioID}>GetCurrentAudioID</button>\n        <button onClick={onGetCurrentConnectionIDs}>\n          GetCurrentConnectionIDs\n        </button>\n        <button onClick={onGetMediaInfo}>GetMediaInfo</button>\n        <button onClick={onGetProtocolInfo}>GetProtocolInfo</button>\n      </fieldset>\n    </div>\n  );\n}\n","import React, { MouseEventHandler, useCallback } from \"react\";\nimport { Icon } from \"./RemoteTv\";\n\nasync function vcr(\n  location = \"http://192.168.2.100:49154/MediaRenderer/desc.xml\",\n  action\n) {\n  return await fetch(\n    `http://${new URL(location).hostname}/YamahaExtendedControl/v1/${action}`,\n    {\n      method: \"GET\",\n      mode: \"no-cors\",\n    }\n  )\n    .then((res) => res.text())\n    .then(console.log);\n}\n\nexport function RemoteVcr({ deviceVcr = [], remoteVcr }) {\n  const [LOCATION, device] = deviceVcr;\n\n  // https://github.com/honnel/yamaha-commands#http-api---input-and-volume\n  return (\n    <div>\n      {device && device.icons.length && (\n        <Icon\n          {...device.icons[0]}\n          title={`${device.modelName} / ${device.modelDescription}`}\n        />\n      )}\n      <h3>VCR</h3>\n      <pre>{JSON.stringify(deviceVcr, null, 2)}</pre>\n      <fieldset>\n        <legend>Information</legend>\n        <button\n          onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n            (event) => remoteVcr(LOCATION, \"system/getDeviceInfo\"),\n            [LOCATION]\n          )}\n        >\n          Device\n        </button>\n        <button\n          onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n            (event) => remoteVcr(LOCATION, \"system/getFeatures\"),\n            [LOCATION]\n          )}\n        >\n          Features\n        </button>\n        <button\n          onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n            (event) => remoteVcr(LOCATION, \"system/getNetworkStatus\"),\n            [LOCATION]\n          )}\n        >\n          NetworkStatus\n        </button>\n        <button\n          onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n            (event) => remoteVcr(LOCATION, \"system/getFuncStatus\"),\n            [LOCATION]\n          )}\n        >\n          FuncStatus\n        </button>\n        <button\n          onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n            (event) => remoteVcr(LOCATION, \"system/getLocationInfo\"),\n            [LOCATION]\n          )}\n        >\n          LocationInfo\n        </button>\n        <button\n          onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n            (event) => remoteVcr(LOCATION, \"main/getStatus\"),\n            [LOCATION]\n          )}\n        >\n          Status\n        </button>\n        <button\n          onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n            (event) => remoteVcr(LOCATION, \"main/getSoundProgramList\"),\n            [LOCATION]\n          )}\n        >\n          SoundProgramList\n        </button>\n      </fieldset>\n      <fieldset>\n        <legend>Input</legend>\n        {[\"airplay\", \"bluetooth\", \"net_radio\", \"optical1\", \"tuner\"].map(\n          (input, key) => (\n            <button\n              key={key}\n              onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n                (event) => vcr(LOCATION, `main/setInput?input=${input}`),\n                [LOCATION]\n              )}\n            >\n              {input}\n            </button>\n          )\n        )}\n      </fieldset>\n      <fieldset>\n        <legend>Volume</legend>\n        {[50, 70, 90, 110, 130, 150].map((volume, key) => (\n          <button\n            key={key}\n            onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n              (event) => vcr(LOCATION, `main/setVolume?volume=${volume}`),\n              [LOCATION]\n            )}\n          >\n            {`Set ${volume}%`}\n          </button>\n        ))}\n        {[\"up\", \"down\"].map((volume, key) => (\n          <button\n            key={key}\n            onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n              (event) => vcr(LOCATION, `main/setVolume?volume=${volume}`),\n              [LOCATION]\n            )}\n          >\n            {`Volume ${volume}`}\n          </button>\n        ))}\n        {[true, false].map((enable, key) => (\n          <button\n            key={key}\n            onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n              (event) => remoteVcr(LOCATION, `main/setMute?enable=${enable}`),\n              [LOCATION]\n            )}\n          >\n            {`Mute ${enable ? \"On\" : \"Off\"}`}\n          </button>\n        ))}\n      </fieldset>\n      <fieldset>\n        <legend>Power Functions</legend>\n        {[true, false].map((enable, key) => (\n          <button\n            key={key}\n            onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n              (event) =>\n                remoteVcr(\n                  LOCATION,\n                  `system/setAutoPowerStandby?enable=${enable}`\n                ),\n              [LOCATION]\n            )}\n          >\n            {`AutoPowerStandby ${enable ? \"On\" : \"Off\"}`}\n          </button>\n        ))}\n        {[\"on\", \"standby\", \"toggle\"].map((power, key) => (\n          <button\n            key={key}\n            onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n              (event) => vcr(LOCATION, `main/setPower?power=${power}`),\n              [LOCATION]\n            )}\n          >\n            {`Power ${power}`}\n          </button>\n        ))}\n      </fieldset>\n      <fieldset>\n        <legend>Sleep Timer</legend>\n        {[60, 30, 0].map((timer, key) => (\n          <button\n            key={key}\n            onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n              (event) => remoteVcr(LOCATION, `main/setSleep?sleep=${timer}`),\n              [LOCATION]\n            )}\n          >\n            {`Sleep ${timer} min`}\n          </button>\n        ))}\n      </fieldset>\n      <fieldset>\n        <legend>AM/FM/DAB Tuner Commands</legend>\n        {[1, 2, 3, 4].map((num, key) => (\n          <button\n            key={key}\n            onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n              (event) =>\n                remoteVcr(\n                  LOCATION,\n                  `tuner/recallPreset?zone=main&band=fm&num=${num}`\n                ),\n              [LOCATION]\n            )}\n          >\n            {`Preset ${num}`}\n          </button>\n        ))}\n        {[\"next\", \"previous\"].map((dir, key) => (\n          <button\n            key={key}\n            onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n              (event) => remoteVcr(LOCATION, `tuner/switchPreset?dir=${dir}`),\n              [LOCATION]\n            )}\n          >\n            {`Preset ${dir}`}\n          </button>\n        ))}\n        {[87500, 105200].map((num, key) => (\n          <button\n            key={key}\n            onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n              (event) =>\n                remoteVcr(\n                  LOCATION,\n                  `tuner/setSleep?band=fm&tuning=direct&num=${num}`\n                ),\n              [LOCATION]\n            )}\n          >\n            {`${new Intl.NumberFormat(\"pl-PL\", {\n              maximumFractionDigits: 2,\n            }).format(num / 1000)} MHz`}\n          </button>\n        ))}\n        {[5, 6, 7, 8].map((num, key) => (\n          <button\n            key={key}\n            onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n              (event) => remoteVcr(LOCATION, `tuner/storePreset?num=${num}`),\n              [LOCATION]\n            )}\n          >\n            {`Store ${num}`}\n          </button>\n        ))}\n        <button\n          onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n            (event) => remoteVcr(LOCATION, `tuner/getPresetInfo?band=fm`),\n            [LOCATION]\n          )}\n        >\n          PresetInfo\n        </button>\n        <button\n          onClick={useCallback<MouseEventHandler<HTMLButtonElement>>(\n            (event) => remoteVcr(LOCATION, `tuner/getPlayInfo`),\n            [LOCATION]\n          )}\n        >\n          PlayInfo\n        </button>\n      </fieldset>\n    </div>\n  );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { RemoteService } from \"../../services\";\nimport { Discover } from \"./Discover\";\nimport { RemoteAdb } from \"./RemoteAdb\";\nimport { RemoteTv } from \"./RemoteTv\";\nimport { RemoteVcr } from \"./RemoteVcr\";\nimport styles from \"./styles.module.scss\";\n\nimport type { DeviceType } from \"@dev/device\";\n\nconst base = \"http://192.168.2.101:8080\";\n\nconst keys = {\n  VOD: 361,\n  POWER: 116,\n  N: 174,\n  EPG: 365,\n  HOME: 102,\n\n  INFO: 358,\n  APP: 367,\n  OPT: 357,\n\n  VOL_P: 115,\n  VOL_M: 114,\n\n  UP: 103,\n  LEFT: 105,\n  OK: 352,\n  RIGHT: 106,\n  DOWN: 108,\n\n  PR_P: 402,\n  PR_M: 403,\n\n  BACK: 158,\n\n  STOP: 128,\n  REV: 168,\n  PAUSE: 119,\n  PLAY: 207,\n  FF: 159,\n  REC: 167,\n\n  MUTE: 113,\n  PORTAL: 102,\n  TEXT: 388,\n  LIST: 395,\n\n  RADIO: 385,\n\n  RED: 398,\n  GREEN: 399,\n  YELLOW: 400,\n  BLUE: 401,\n\n  \"1\": 2,\n  \"2\": 3,\n  \"3\": 4,\n  \"4\": 5,\n  \"5\": 6,\n  \"6\": 7,\n  \"7\": 8,\n  \"8\": 9,\n  \"9\": 10,\n  \"0\": 11,\n\n  SETUP: 367,\n  STAR: 1,\n};\n\nfunction delay(timeout = 100) {\n  return new Promise((resolve) => setTimeout(resolve, timeout));\n}\n\nconst remoteService = new RemoteService();\n\nfunction useRemote() {\n  const [{ data }, setState] = useState(() => ({\n    data: null,\n  }));\n  const [devices, setDevices] = useState<Record<string, DeviceType>>(\n    () => ({})\n  );\n\n  useEffect(() => {\n    const subscriptions = [\n      remoteService.onMessage().subscribe(({ data }) => setState({ data })),\n    ];\n    return () => {\n      subscriptions.map((it) => it.unsubscribe());\n    };\n  }, []);\n\n  return [\n    { data, devices },\n    {\n      discover: () =>\n        remoteService.getDevices().subscribe(({ data }) => setDevices(data)),\n      remoteRcu: (location, key) => remoteService.getRemoteRcu(location, key),\n      remoteTv: (location, action) =>\n        remoteService.getRemoteTv(location, action),\n      remoteVcr: (location, action) =>\n        remoteService.getRemoteVcr(location, action),\n      status: (location) => remoteService.getStatusAdb(location),\n      sendMessage: (message) => remoteService.sendMessage(message),\n    },\n  ];\n}\n\n// https://github.com/HubertReX/Flask-Home-Automation/blob/master/send_key2ncplus.py\n// http://192.168.2.101:8080/upnpdev/pres/uuid_1651c520-1dd2-11b2-a7dd-c477af3c9c7f/00\n\nasync function event(ev: string, code: number) {\n  return await exec(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <s:Envelope s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">\n     <s:Body>\n        <u:ProcessInputEvent xmlns:u=\"urn:adbglobal.com:service:X_ADB_RemoteControl:1\">\n           <InputEvent>ev=${ev},code=${code}</InputEvent>\n        </u:ProcessInputEvent>\n     </s:Body>\n  </s:Envelope>`)\n    .then((res) => res.text())\n    .then((data) => console.log(data));\n}\n\n// https://raw.githubusercontent.com/rafikel/Fibaro/master/ncplus/ncplus.lua\n\nasync function exec(\n  body: string,\n  action = \"urn:adbglobal.com:service:X_ADB_RemoteControl:1#ProcessInputEvent\"\n) {\n  const ctrl = \"/upnpfun/ctrl/uuid_1651c520-1dd2-11b2-a7dd-c477af3c9c7f/04\";\n  // const ctrl = '/upnpfun/ctrl/uuid_1651c520-1dd2-11b2-a7dd-c477af3c9c7f/01'\n  const url = `${base}${ctrl}`;\n\n  console.log(body);\n\n  return await fetch(url, {\n    method: \"POST\",\n    body,\n    headers: {\n      SOAPACTION: `\"${action}\"`,\n      // \"SOAPACTION\": '',\n      // \"SOAPACTION\": '\"urn:adbglobal.com:service:X_ADB_RemoteControl:1\"',\n      // \"SOAPACTION\": 'urn:adbglobal.com:service:X_ADB_RemoteControl:1#ProcessInputEvent',\n      // \"CONTENT-TYPE\": 'text/xml; charset=\"utf-8\"',\n      // \"HOST\": \"192.168.2.101:8080\",\n      // 'Content-type': 'application/xml',\n      // 'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  });\n}\n\nasync function test() {\n  // upnpReqest(tcpDEVICE, virtualIP, virtualPort,\n  //   \"/upnpfun/ctrl/\" .. boxId .. \"/04\",\n  //   \"adbglobal.com\",\n  //   \"X_ADB_RemoteControl:1\",\n  //   \"ProcessInputEvent\",\n  //   \"<InputEvent>ev=keydn,code=\" .. key .. \"</InputEvent>\"\n  // );\n\n  // await exec(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  // <s:Envelope s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  //    <s:Body>\n  //       <u:ProcessInputEvent xmlns:u=\"urn:adbglobal.com:service:X_ADB_RemoteControl:1\">\n  //          <InputEvent>ev=${status},code=${keys.POWER}</InputEvent>\n  //       </u:ProcessInputEvent>\n  //    </s:Body>\n  // </s:Envelope>`).then(res => res.text())\n  // .then(data => console.log(data))\n\n  // response = upnpReqest(tcpDEVICE, virtualIP, virtualPort,\n  //   \"/upnpfun/ctrl/\" .. boxId .. \"/01\",\n  //   \"schemas-upnp-org\",\n  //   \"ContentDirectory:2\",\n  //   \"GetSystemUpdateID\",\n  //   \"\"\n  // );\n\n  // await exec(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  // <s:Envelope s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  //    <s:Body>\n  //       <u:GetSystemUpdateID xmlns:u=\"urn:schemas-upnp-org:service:ContentDirectory:2\">\n  //       </u:GetSystemUpdateID>\n  //    </s:Body>\n  // </s:Envelope>`,\"urn:schemas-upnp-org:service:ContentDirectory:2#GetSystemUpdateID\").then(res => res.text())\n  // .then(data => console.log(data))\n\n  const code = keys.POWER;\n\n  await event(\"keydown\", code);\n  await delay(1000);\n  await event(\"keyup\", code);\n\n  // await exec(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  //   <s:Envelope s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  //      <s:Body>\n  //         <u:ProcessInputEvent xmlns:u=\"urn:adbglobal.com:service:X_ADB_RemoteControl:1\">\n  //            <InputEvent>ev=${status},code=${key}</InputEvent>\n  //         </u:ProcessInputEvent>\n  //      </s:Body>\n  //   </s:Envelope>`).then(res => res.text())\n  // .then(data => console.log(data))\n}\n\nexport default function Remote() {\n  const [\n    { data, devices },\n    { discover, remoteRcu, remoteTv, remoteVcr, status },\n  ] = useRemote();\n  console.log({ data, devices });\n\n  const deviceAdb = useMemo(\n    () =>\n      Object.entries(devices).find(\n        ([_, { deviceType }]) =>\n          deviceType === \"urn:schemas-upnp-org:device:MediaServer:3\"\n      ),\n    [devices]\n  );\n\n  const deviceTv = useMemo(\n    () =>\n      Object.entries(devices).find(\n        ([_, { deviceType, manufacturer }]) =>\n          deviceType === \"urn:schemas-upnp-org:device:MediaRenderer:1\" &&\n          manufacturer === \"Panasonic\"\n      ),\n    [devices]\n  );\n\n  const deviceVcr = useMemo(\n    () =>\n      Object.entries(devices).find(\n        ([_, { deviceType, manufacturer }]) =>\n          deviceType === \"urn:schemas-upnp-org:device:MediaRenderer:1\" &&\n          manufacturer === \"Yamaha Corporation\"\n      ),\n    [devices]\n  );\n\n  return (\n    <section className={styles.Section}>\n      <h2>Remote</h2>\n      <Discover discover={discover} />\n      <RemoteAdb deviceAdb={deviceAdb} remoteRcu={remoteRcu} status={status} />\n      <RemoteVcr deviceVcr={deviceVcr} remoteVcr={remoteVcr} />\n      <RemoteTv deviceTv={deviceTv} remoteTv={remoteTv} />\n      {data === null ? (\n        <div>Loading...</div>\n      ) : (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      )}\n    </section>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".O2YxmgfWTY2Spk1FgUmv{color:purple}.yUfaV9HyNUDqoVH68vEL{float:right;margin:1em}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../remote/src/containers/Remote/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,YAAA,CAEF,sBACE,WAAA,CACA,UAAA\",\"sourcesContent\":[\".Section {\\n  color: purple;\\n}\\n.Icon {\\n  float: right;\\n  margin: 1em;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": \"O2YxmgfWTY2Spk1FgUmv\",\n\t\"Icon\": \"yUfaV9HyNUDqoVH68vEL\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.module.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["client","GraphQLClient","location","pathname","headers","subscriptions","createClient","url","protocol","host","GET_DEVICES","gql","GET_VERSION","REMOTE_RCU","REMOTE_TV","REMOTE_VCR","ON_REMOTE","SEND_REMOTE","Discover","discover","onClick","useCallback","event","async","adb","key","fetch","URL","origin","method","mode","body","then","res","text","console","log","RemoteAdb","deviceAdb","remoteRcu","status","version","setVersion","useState","LOCATION","onVersion","subscribe","onStandBy","onVolumeDown","onVolumeUp","JSON","stringify","Icon","width","height","title","className","styles","src","RemoteTv","deviceTv","remoteTv","device","onGetVolume","onSetVolume","onGetMute","onListPresets","onSetMute","onSendKey","onAppType","onPinCode","onRequestAuth","onGetAudioList","onGetCurrentAudioID","onGetCurrentConnectionIDs","onGetMediaInfo","onGetProtocolInfo","icons","length","modelName","modelNumber","vcr","action","hostname","RemoteVcr","deviceVcr","remoteVcr","modelDescription","map","input","volume","enable","power","timer","num","dir","Intl","NumberFormat","maximumFractionDigits","format","remoteService","getDevices","from","this","request","pipe","devices","getStatusAdb","getRemoteRcu","getRemoteTv","getRemoteVcr","sendMessage","data","onMessage","Observable","observer","query","next","errors","error","remote","complete","Remote","setState","setDevices","useEffect","it","unsubscribe","message","useRemote","useMemo","Object","entries","find","_","deviceType","manufacturer","___CSS_LOADER_EXPORT___","push","module","id","locals","project","thisArg","source","subscriber","index","value","call","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","update","hot","invalidate","isNamedExport","oldLocals","accept","a","b","p","isEqualLocals","dispose","undefined"],"sourceRoot":""}