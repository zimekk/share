{"version":3,"file":"885.js","mappings":"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","sources":["webpack://@dev/app/../web/src/containers/Cast/index.tsx","webpack://@dev/app/../web/src/containers/Cast/styles.module.scss","webpack://@dev/app/../web/src/containers/Cast/styles.module.scss?db32"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport styles from \"./styles.module.scss\";\n\n// https://github.com/wem5637/chromecast-react-web-demo/blob/master/src/CastControls.js\nfunction CastControls({ src }) {\n  const [state, setState] = useState(() => ({\n    isConnected: false,\n    isMediaLoaded: false,\n    playerState: null,\n  }));\n  const remotePlayer = useRef(null);\n  const remotePlayerController = useRef(null);\n\n  useEffect(() => {\n    const initializeCastPlayer = () => {\n      // https://stackoverflow.com/questions/43533703/how-do-you-find-your-google-cast-app-id-app-id-in-the-2017-google-play-develop\n      const options = {\n        receiverApplicationId: chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID, // CC1AD845\n        autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n        androidReceiverCompatible: true,\n      };\n\n      cast.framework.CastContext.getInstance().setOptions(options);\n\n      remotePlayer.current = new cast.framework.RemotePlayer();\n      remotePlayerController.current =\n        new cast.framework.RemotePlayerController(remotePlayer.current);\n\n      remotePlayerController.current.addEventListener(\n        cast.framework.RemotePlayerEventType.IS_CONNECTED_CHANGED,\n        (e) => setState({ isConnected: e.value })\n      );\n\n      remotePlayerController.current.addEventListener(\n        cast.framework.RemotePlayerEventType.PLAYER_STATE_CHANGED,\n        function (e) {\n          if (e.value === \"PLAYING\") {\n            console.log(\"Chromecast is \" + e.value);\n            setState({ playerState: e.value });\n          } else if (e.value === \"BUFFERING\") {\n            console.log(\"Chromecast is \" + e.value);\n            setState({ playerState: e.value });\n          } else {\n            console.log(\"Chromecast is \" + e.value);\n            setState({ playerState: e.value });\n          }\n        }.bind(this)\n      );\n    };\n\n    const injectScript = (src: string, type = \"text/javascript\") => {\n      const script = Object.assign(document.createElement(\"script\"), {\n        type,\n        src,\n      });\n      document.head.appendChild(script);\n    };\n\n    injectScript(`https://www.gstatic.com/cv/js/sender/v1/cast_sender.js`);\n    injectScript(\n      `https://www.gstatic.com/cast/sdk/libs/sender/1.0/cast_framework.js`\n    );\n\n    window[\"__onGCastApiAvailable\"] = (isAvailable) => {\n      if (isAvailable && cast) {\n        initializeCastPlayer();\n      } else {\n        console.log(\"Was not able to initialize CastPlayer\");\n      }\n    };\n  }, []);\n\n  console.log({ state });\n\n  const castSrc = useCallback(() => {\n    let mediaInfo = new chrome.cast.media.MediaInfo(1, \"video/mp4\");\n    mediaInfo.contentUrl = src;\n\n    mediaInfo.streamType = chrome.cast.media.StreamType.LIVE;\n    mediaInfo.metadata = new chrome.cast.media.TvShowMediaMetadata();\n    mediaInfo.metadata.title = \"Sample Title\";\n\n    let request = new chrome.cast.media.LoadRequest(mediaInfo);\n    request.autoplay = true;\n    var session = cast.framework.CastContext.getInstance().getCurrentSession();\n    if (session) {\n      session\n        .loadMedia(request)\n        .then(() => {\n          console.log(\"Media is loaded\");\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    } else {\n      console.log(\"no session is available\");\n    }\n  }, []);\n\n  const stopSrc = useCallback(() => {\n    var session = cast.framework.CastContext.getInstance().getCurrentSession();\n    if (session) {\n      remotePlayerController.current.stop();\n    }\n  }, []);\n\n  return (\n    <div\n      style={{\n        height: \"40px\",\n        width: \"200px\",\n        display: \"flex\",\n        margin: \"15px\",\n      }}\n    >\n      <google-cast-launcher>Connect to cast</google-cast-launcher>\n      <button onClick={castSrc}>Load Media</button>\n      <button onClick={stopSrc}>Stop</button>\n    </div>\n  );\n}\n\nexport default function Cast() {\n  const src =\n    \"https://commondatastorage.googleapis.com/gtv-videos-bucket/CastVideos/mp4/ElephantsDream.mp4\";\n\n  return (\n    <section className={styles.Section}>\n      <h2>Cast</h2>\n      <video\n        style={{ height: \"360px\", width: \"640px\" }}\n        src={src}\n        autoPlay\n        controls={true}\n      />\n      <CastControls src={src} />\n    </section>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".n861XaBqki3bL5qL8C0d{color:blue}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../web/src/containers/Cast/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,UAAA\",\"sourcesContent\":[\".Section {\\n  color: blue;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": \"n861XaBqki3bL5qL8C0d\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.module.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["CastControls","src","state","setState","useState","isConnected","isMediaLoaded","playerState","remotePlayer","useRef","remotePlayerController","useEffect","initializeCastPlayer","options","receiverApplicationId","chrome","cast","media","DEFAULT_MEDIA_RECEIVER_APP_ID","autoJoinPolicy","AutoJoinPolicy","ORIGIN_SCOPED","androidReceiverCompatible","framework","CastContext","getInstance","setOptions","current","RemotePlayer","RemotePlayerController","addEventListener","RemotePlayerEventType","IS_CONNECTED_CHANGED","e","value","PLAYER_STATE_CHANGED","console","log","bind","this","injectScript","type","script","Object","assign","document","createElement","head","appendChild","window","isAvailable","castSrc","useCallback","mediaInfo","MediaInfo","contentUrl","streamType","StreamType","LIVE","metadata","TvShowMediaMetadata","title","request","LoadRequest","autoplay","session","getCurrentSession","loadMedia","then","catch","stopSrc","stop","React","style","height","width","display","margin","onClick","Cast","className","styles","autoPlay","controls","___CSS_LOADER_EXPORT___","push","module","id","locals","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","update","hot","invalidate","isNamedExport","oldLocals","accept","a","b","p","isEqualLocals","dispose","undefined"],"sourceRoot":""}